// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241106043430_Update Invoice Entity")]
    partial class UpdateInvoiceEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Invoice", b =>
                {
                    b.Property<int?>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("InvoiceID"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PartyID")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceID");

                    b.HasIndex("PartyID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Entities.InvoiceWiseProduct", b =>
                {
                    b.Property<int?>("InvoiceWiseProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("InvoiceWiseProductID"));

                    b.Property<int?>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceWiseProductID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("ProductID");

                    b.ToTable("InvoiceWiseProducts");
                });

            modelBuilder.Entity("Entities.Party", b =>
                {
                    b.Property<int?>("PartyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PartyID"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PartyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartyID");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("Entities.PartyWiseProduct", b =>
                {
                    b.Property<int?>("PartyWiseProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PartyWiseProductID"));

                    b.Property<int?>("PartyID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("PartyWiseProductID");

                    b.HasIndex("PartyID");

                    b.HasIndex("ProductID");

                    b.ToTable("PartyWiseProducts");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Property<int?>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ProductID"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Entities.ProductRate", b =>
                {
                    b.Property<int?>("ProductRateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ProductRateID"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PriceAppliedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductRateID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductRates");
                });

            modelBuilder.Entity("Entities.Invoice", b =>
                {
                    b.HasOne("Entities.Party", "Party")
                        .WithMany("Invoices")
                        .HasForeignKey("PartyID");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Entities.InvoiceWiseProduct", b =>
                {
                    b.HasOne("Entities.Invoice", "Invoice")
                        .WithMany("InvoiceWiseProducts")
                        .HasForeignKey("InvoiceID");

                    b.HasOne("Entities.Product", "Product")
                        .WithMany("InvoiceWiseProducts")
                        .HasForeignKey("ProductID");

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.PartyWiseProduct", b =>
                {
                    b.HasOne("Entities.Party", "Party")
                        .WithMany("PartyWiseProducts")
                        .HasForeignKey("PartyID");

                    b.HasOne("Entities.Product", "Product")
                        .WithMany("PartyWiseProducts")
                        .HasForeignKey("ProductID");

                    b.Navigation("Party");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.ProductRate", b =>
                {
                    b.HasOne("Entities.Product", "Product")
                        .WithMany("ProductRates")
                        .HasForeignKey("ProductID");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.Invoice", b =>
                {
                    b.Navigation("InvoiceWiseProducts");
                });

            modelBuilder.Entity("Entities.Party", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("PartyWiseProducts");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Navigation("InvoiceWiseProducts");

                    b.Navigation("PartyWiseProducts");

                    b.Navigation("ProductRates");
                });
#pragma warning restore 612, 618
        }
    }
}
